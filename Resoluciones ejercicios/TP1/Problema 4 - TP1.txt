https://marie.js.org/#project={%22code%22:%22/Problema%204%20\n/Escriba%20un%20programa%20que%20calcule%20los%20primeros%2020%20elementos%20de%20la%20sucesi%C3%B3n%20de%20\n/Fibonacci%20y%20los%20almacene%20en%20orden%20creciente%20en%20posiciones%20consecutivas%20de%20memoria%20\n/empezando%20en%200x0040.%20Verificaci%C3%B3n:%20El%20vig%C3%A9simo%20t%C3%A9rmino%20debe%20valer%200x1055%20y%20debe%20\n/quedar%20almacenado%20en%20la%20posici%C3%B3n%20de%20memoria%200x53.%20\n\nORG%20100%20/Planteo%20la%20resolucion%20con%203%20valores:%20un%20anterior,%20un%20actual%20y%20un%20siguiente.\n\t\t/donde%20siguiente%20=%20actual%20+%20anterior\n\n\t\t/Este%20bloque%20resta%202%20a%20n,%20donde%20en%20es%20la%20cantidad%20de%20iteraciones%20que%20quiero%20hacer.%20Le%20resto%202%20porque%20los%20dos%20primeros%20terminos%20ya%20estan%20declarados%20(1%20y%200)\n\t\t/y%20para%20que%20el%20n%20declarado%20al%20final%20corresponda%20directamente%20a%20la%20cantidad%20de%20iteraciones%20que%20quiere%20el%20usuario.\n\t\tLoad%20n\n\t\tsubt%20uno\n\t\tsubt%20uno\n\t\tStore%20n\n\t\t\n\t\t/Cargo%20el%20cero%20en%20la%20primer%20posicion,%20como%20valor%20anterior\n\t\tLoad%20cero\n\t\tStorei%20anterior\n\n\t\t/Guardo%20el%20uno%20como%20el%20valor%20actual\n\t\tLoad%20uno\n\t\tStorei%20actual\n\n\t\t/Al%20valor%20actual%20le%20sumo%20el%20anterior,%20y%20lo%20guardo%20en%20una%20variable%20auxiliar\ndeNuevo,Loadi%20actual\n\t\tAddi%20anterior\n\t\tStore%20siguiente\n\n\t\t/Aumento%20la%20direccion%20de%20celda%20actual%20y%20anterior%20en%20uno\n\t\tLoad%20actual\n\t\tAdd%20uno\n\t\tStore%20actual\n\n\t\tLoad%20anterior\n\t\tAdd%20uno\n\t\tStore%20anterior\n\n\n\t\t/Guardo%20el%20valor%20auxiliar%20calculado%20previamente%20como%20nuevo%20valor%20actual%20NOTA:%20anterior%20ya%20queda%20actulizado%20al%20mover%20la%20direccion%20de%20la%20celda%20en%20el%20paso%20previo\n\t\tLoad%20siguiente\n\t\tStorei%20actual\n\n\t\t/Reduzco%20n%20en%20uno%20e%20itero%20de%20nuevo%20si%20es%20necesario\n\t\tLoad%20n\n\t\tSubt%20uno\n\t\tStore%20n\n\t\tSkipcond%20400\n\t\tJump%20deNuevo\n\t\tHalt\n\t\t\nn,%20DEC%2020%20/%20Cantidad%20de%20numeros%20de%20la%20serie%20que%20se%20desea%20calcular%20(incluidos%20el%200%20y%20el%201)\ncero,%20DEC%200\nuno,%20DEC%201\n\nanterior,%20HEX%2040%20/ojo:%20anterior%20y%20actual%20son%20punteros,%20siguiente%20no%20(la%20uso%20como%20variable%20auxiliar)\nactual,%20HEX%2041\nsiguiente,%20DEC%200\n%22,%22breakpoints%22:{%221%22:false,%222%22:false,%223%22:false,%224%22:false,%225%22:false,%226%22:false,%227%22:false,%228%22:false,%229%22:false,%2210%22:false,%2211%22:false,%2212%22:false,%2213%22:false,%2214%22:false,%2215%22:false,%2216%22:false,%2217%22:false,%2218%22:false,%2219%22:false,%2220%22:false,%2221%22:false,%2222%22:false,%2223%22:false,%2224%22:false,%2225%22:false,%2226%22:false,%2227%22:false,%2228%22:false,%2229%22:false,%2230%22:false,%2231%22:false,%2232%22:false,%2233%22:false,%2234%22:false,%2235%22:false,%2236%22:false,%2237%22:false,%2238%22:false,%2239%22:false,%2240%22:false,%2241%22:false,%2242%22:false,%2243%22:false,%2244%22:false,%2245%22:false,%2246%22:false,%2247%22:false,%2248%22:false,%2249%22:false,%2250%22:false,%2251%22:false,%2252%22:false,%2253%22:false,%2254%22:false,%2255%22:false,%2256%22:false,%2257%22:false,%2258%22:false,%2259%22:false},%22pointers%22:{},%22inputs%22:[{%22format%22:%22hex%22,%22consumed%22:%22%22,%22queued%22:%22%22}],%22outputMode%22:%22hex%22}