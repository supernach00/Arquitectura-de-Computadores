https://marie.js.org/#project={%22code%22:%22/Proyecto%20Integrador:%20Algoritmos%20de%20ordenamiento\n/Proponga%20un%20programa%20que%20ordene%20en%20forma%20creciente%20un%20vector%20de%20n%C3%BAmeros%20enteros%20de\n/16%20bits%20en%20Ca2.%20La%20longitud%20del%20vector%20se%20encuentra%20almacenada%20en%20la%20posici%C3%B3n%20de\n/memoria%200x001%20y%20el%20vector%20comienza%20en%20la%20direcci%C3%B3n%200x002.%20El%20resultado%20del\n/programa%20debe%20ser%20almacenado%20en%20la%20misma%20ubicaci%C3%B3n%20del%20vector%20original.\n\n/%20Algoritmo%20de%20ordenamiento%20en%20MARIE\n/%20Ignacio%20Nahuel%20Chantiri,%2069869/1\n/%20Algoritmo%20utilizado:%20Bubble%20Sort\n/%20Ocupaci%C3%B3n%20de%20memoria%20de%20programa:%2039%20instrucciones%20(78%20bytes)\n/%20Ocupaci%C3%B3n%20de%20memoria%20de%20datos%20(sin%20incluir%20el%20vector):%209%20datos%20(18%20bytes)\n/%20Performance:%20O(n)%20en%20el%20mejor%20caso,%20O(n^2)%20en%20el%20peor%20caso.\n/%20Vector%20ordenado%20%20%20%20-3,-2,-1,0,1,2,3%20:%20106%20instrucciones,%20713%20ciclos%20de%20reloj\n/%20Vector%20invertido%20%20%203,2,1,0,-1,-2,-3%20:%20527%20instrucciones,%203739%20ciclos%20de%20reloj\n/%20Vector%20desordenado%200,-2,1,3,-1,2,-3%20:%20477%20instrucciones,%203299%20ciclos%20de%20reloj\n\n%20%20%20%20%20%20%20%20ORG%20000\n%20%20%20%20%20%20%20%20Jump%20Loop1%20/000\n%20%20%20%20%20%20%20%20largo,%20DEC%207%20/001\n%20%20%20%20%20%20%20%20DEC%203%20/002\n%20%20%20%20%20%20%20%20DEC%202%20/003%20posicionA%20incial%20\n%20%20%20%20%20%20%20%20DEC%201%20/004%20posicionB%20inicial\n%20%20%20%20%20%20%20%20DEC%200%20/005\n%20%20%20%20%20%20%20%20DEC%20-1%20/006\n%20%20%20%20%20%20%20%20DEC%20-2%20/007\n%20%20%20%20%20%20%20%20DEC%20-3%20/008\n%20\n%20%20%20%20%20%20%20%20posicionA,%20HEX%20002\n%20%20%20%20%20%20%20%20posicionB,%20DEC%20003\n%20%20%20%20%20%20%20%20B,%20DEC%200\n%20%20%20%20%20%20%20%20uno,%20DEC%201\n%20%20%20%20%20%20%20%20dos,%20DEC%2002\n%20%20%20%20%20%20%20%20tres,%20DEC%2003\n%20%20%20%20%20%20%20%20largoAux,%20DEC%200\n%20%20%20%20%20%20%20%20permutaciones,%20DEC%200\n%20%20%20%20%20%20%20%20n,%20DEC%201\n\nLoop1,%20%20%20%20%20%20Clear%20/Reinicio%20el%20contador%20de%20permutaciones\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20permutaciones\n\n\t\t\t/Defino%20hasta%20que%20posici%C3%B3n%20del%20vector%20recorro\n%20%20%20%20%20%20%20%20%20%20%20%20Load%20largo\n%20%20%20%20%20%20%20%20%20%20%20%20Subt%20n\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20largoAux%20\n\n%20%20%20%20%20%20%20%20%20%20%20%20/Reinicio%20las%20posiciones\n%20%20%20%20%20%20%20%20%20%20%20%20Load%20dos\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20posicionA\n%20%20%20%20%20%20%20%20%20%20%20%20Load%20tres\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20posicionB\n\nLoop2,%20%20%20%20%20%20Loadi%20posicionB%20/Dispongo%20A%20y%20B%20para%20compararlos%20%20%20%20%20%20%20%20%20%20%20%20\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20B\n%20%20%20%20%20%20%20%20%20%20%20%20Loadi%20posicionA\n\n%20%20%20%20%20%20%20%20%20%20%20%20/Comparaci%C3%B3n\n%20%20%20%20%20%20%20%20%20%20%20%20Subt%20B%20/A%20-%20B\n%20%20%20%20%20%20%20%20%20%20%20%20SkipCond%20800%20/Esto%20se%20activa%20cuando%20hay%20que%20permutar\n%20%20%20%20%20%20%20%20%20%20%20%20Jump%20continuar%20/Este%20salto%20se%20activa%20cuando%20no%20hay%20que%20permutar\n\n%20%20%20%20%20%20%20%20%20%20%20%20/%20Permutaci%C3%B3n\n%20%20%20%20%20%20%20%20%20%20%20%20Loadi%20posicionA%20%20%20%20%20%20%20%20%20%20%20%20%20%20/Cargo%20a%20y%20lo%20guardo%20en%20la%20posicion%20b\n%20%20%20%20%20%20%20%20%20%20%20%20Storei%20posicionB\n%20%20%20%20%20%20%20%20%20%20%20%20Load%20B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20/Cargo%20b%20y%20lo%20guardo%20en%20la%20posicion%20a\n%20%20%20%20%20%20%20%20%20%20%20%20Storei%20posicionA\n\n%20%20%20%20%20%20%20%20%20%20%20%20/Agrego%20la%20permutaci%C3%B3n%20hecha%20al%20contador%20de%20permutaciones\n%20%20%20%20%20%20%20%20%20%20%20%20Load%20uno\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20permutaciones\n\ncontinuar,%20%20Load%20largoAux%20/Actualizo%20el%20flag%20que%20indica%20si%20termin%C3%A9%20de%20recorrer%20el%20vector%20o%20no\n%20%20%20%20%20%20%20%20%20%20%20%20Subt%20uno\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20largoAux\n\t\t\t\n%20%20%20%20%20%20%20%20%20%20%20%20Skipcond%20800%20/Si%20no%20se%20termin%C3%B3%20de%20recorrer%20el%20vector%20salto%20a%20continuar2\n%20%20%20%20%20%20%20%20%20%20%20%20Jump%20fin%20/Este%20salto%20se%20activa%20cuando%20termin%C3%A9%20de%20recorrer%20el%20vector\n\t\t\tJump%20continuar2\n\nfin,%20%20%20%20%20%20%20%20Load%20n%20/Reduzco%20el%20largo%20que%20tengo%20que%20recorrer%20en%20uno\n%20%20%20%20%20%20%20%20%20%20%20%20Add%20uno\n\t\t\tStore%20n\n\n%20%20%20%20%20%20%20%20%20%20%20%20/Checkeo%20si%20el%20vector%20est%C3%A1%20ordenado\n%20%20%20%20%20%20%20%20%20%20%20%20Load%20permutaciones\n%20%20%20%20%20%20%20%20%20%20%20%20SkipCond%20400\n%20%20%20%20%20%20%20%20%20%20%20%20Jump%20Loop1%20%20/Si%20hubo%20al%20menos%20una%20permutaci%C3%B3n,%20vuelvo%20a%20recorrer%20el%20vector%20desde%20el%20principio.\n\n%20%20%20%20%20%20%20%20%20%20%20%20Halt%20%20/Si%20las%20permutaciones%20fueron%20cero%20en%20este%20recorrido,%20el%20vector%20debe%20estar%20ordenado.\n\n\ncontinuar2,%20Load%20posicionB%20/Aumento%20las%20posiciones%20A%20y%20B\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20posicionA\n%20%20%20%20%20%20%20%20%20%20%20%20Add%20uno\n%20%20%20%20%20%20%20%20%20%20%20%20Store%20posicionB\n\n\t\t\t/Continuo%20recorriendo%20el%20mismo%20vector%20con%20los%20dos%20elementos%20siguientes\n%20%20%20%20%20%20%20%20%20%20%20%20Jump%20Loop2\n%22,%22breakpoints%22:{%221%22:false,%222%22:false,%223%22:false,%224%22:false,%225%22:false,%226%22:false,%227%22:false,%228%22:false,%229%22:false,%2210%22:false,%2211%22:false,%2212%22:false,%2213%22:false,%2214%22:false,%2215%22:false,%2216%22:false,%2217%22:false,%2218%22:false,%2219%22:false,%2220%22:false,%2221%22:false,%2222%22:false,%2223%22:false,%2224%22:false,%2225%22:false,%2226%22:false,%2227%22:false,%2228%22:false,%2229%22:false,%2230%22:false,%2231%22:false,%2232%22:false,%2233%22:false,%2234%22:false,%2235%22:false,%2236%22:false,%2237%22:false,%2238%22:false,%2239%22:false,%2240%22:false,%2241%22:false,%2242%22:false,%2243%22:false,%2244%22:false,%2245%22:false,%2246%22:false,%2247%22:false,%2248%22:false,%2249%22:false,%2250%22:false,%2251%22:false,%2252%22:false,%2253%22:false,%2254%22:false,%2255%22:false,%2256%22:false,%2257%22:false,%2258%22:false,%2259%22:false,%2260%22:false,%2261%22:false,%2262%22:false,%2263%22:false,%2264%22:false,%2265%22:false,%2266%22:false,%2267%22:false,%2268%22:false,%2269%22:false,%2270%22:false,%2271%22:false,%2272%22:false,%2273%22:false,%2274%22:false,%2275%22:false,%2276%22:false,%2277%22:false,%2278%22:false,%2279%22:false,%2280%22:false,%2281%22:false,%2282%22:false,%2283%22:false,%2284%22:false,%2285%22:false,%2286%22:false,%2287%22:false,%2288%22:false,%2289%22:false,%2290%22:false,%2291%22:false,%2292%22:false,%2293%22:false,%2294%22:false,%2295%22:false,%2296%22:false,%2297%22:false,%2298%22:false,%2299%22:false,%22100%22:false,%22101%22:false,%22102%22:false,%22103%22:false,%22104%22:false,%22105%22:false,%22106%22:false},%22pointers%22:{},%22inputs%22:[{%22format%22:%22dec%22,%22consumed%22:%22%22,%22queued%22:%2212\n12\n%22}],%22outputMode%22:%22dec%22,%22_timestamp%22:1743804803822,%22_id%22:%2256b16527-0b28-4f1f-b9ef-72d78bd75296%22}