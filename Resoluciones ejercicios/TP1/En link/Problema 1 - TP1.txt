https://marie.js.org/#project={%22code%22:%22/Problema%201%20\n/Proponga%20un%20programa%20para%20MARIE%20que%20calcule,%20utilizando%20una%20iteraci%C3%B3n,%20los%20\n/primeros%2010%20m%C3%BAltiplos%20de%207%20y%20los%20almacene%20ordenados%20en%20forma%20creciente%20en%20la%20\n/memoria,%20comenzando%20en%20la%20direcci%C3%B3n%200x0050.%20Compare%20la%20iteraci%C3%B3n%20resultante%20con%20\n/con%20las%20estructuras%20de%20alto%20nivel%20conocidas%20(for,%20if,%20while,%20etc.).%20Compare%20con%20el%20\n/c%C3%B3digo%20que%20resultar%C3%ADa%20si%20en%20lugar%20de%20utilizar%20una%20iteraci%C3%B3n,%20se%20utilizara%20s%C3%B3lo%20una%20\n/secuencia%20de%20instrucciones.%20\n\n/Considero%20que%20cero%20es%20el%20primer%20multiplo%20de%207%20(queda%20ubicado%20en%200x0050):\n\nORG%20100\n%20%20%20%20%20%20%20%20/Sumo%207%20al%20contenido%20de%20posicion\nLoop,%20%20%20Loadi%20%20%20posicion%20\n%20%20%20%20%20%20%20%20Add%20%20%20%20%20siete\n%20%20%20%20%20%20%20%20Store%20%20%20acum\n\n%20%20%20%20%20%20%20%20/Avanzo%20de%20posici%C3%B3n\n%20%20%20%20%20%20%20%20Load%20%20%20%20uno%20\n%20%20%20%20%20%20%20%20Add%20%20%20%20%20posicion\n%20%20%20%20%20%20%20%20Store%20%20%20posicion\n\n%20%20%20%20%20%20%20%20/Guardo%20el%20n%C3%BAmero%20calculado%20en%20la%20nueva%20posici%C3%B3n\n%20%20%20%20%20%20%20%20Load%20%20%20%20acum%20\n%20%20%20%20%20%20%20%20StoreI%20%20posicion\n\n%20%20%20%20%20%20%20%20/Cuento%20la%20iteraci%C3%B3n\n%20%20%20%20%20%20%20%20Load%20%20%20%20flag%20\n%20%20%20%20%20%20%20%20Subt%20%20%20%20uno\n%20%20%20%20%20%20%20%20Store%20%20%20flag\n\n%20%20%20%20%20%20%20%20/Comienzo%20de%20nuevo%20siempre%20y%20cuando%20flag%20sea%20distinto%20de%20cero\n%20%20%20%20%20%20%20%20SkipCond%20400\n%20%20%20%20%20%20%20%20Jump%20%20%20%20Loop%20%20%20%20%20%20%20%20%20%20%20%20\n%20%20%20%20%20%20%20%20Halt\n\nflag,%20%20%20%20%20%20%20DEC%209%20/%20Son%20n-1%20iteraciones,%20ya%20que%20el%20cero%20queda%20definido%20de%20comienzo\nuno,%20%20%20%20%20%20%20%20DEC%201\nsiete,%20%20%20%20%20%20DEC%207\nposicion,%20%20%20HEX%2050\nacum,%20%20%20%20%20%20%20HEX%200\n%22,%22breakpoints%22:{%221%22:false,%222%22:false,%223%22:false,%224%22:false,%225%22:false,%226%22:false,%227%22:false,%228%22:false,%229%22:false,%2210%22:false,%2211%22:false,%2212%22:false,%2213%22:false,%2214%22:false,%2215%22:false,%2216%22:false,%2217%22:false,%2218%22:false,%2219%22:false,%2220%22:false,%2221%22:false,%2222%22:false,%2223%22:false,%2224%22:false,%2225%22:false,%2226%22:false,%2227%22:false,%2228%22:false,%2229%22:false,%2230%22:false,%2231%22:false,%2232%22:false,%2233%22:false,%2234%22:false,%2235%22:false,%2237%22:false,%2238%22:false,%2239%22:false,%2240%22:false,%2241%22:false},%22pointers%22:{},%22inputs%22:[{%22format%22:%22hex%22,%22consumed%22:%22%22,%22queued%22:%22%22}],%22outputMode%22:%22hex%22}